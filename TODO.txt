TODO

- now
  - switch back to gdc/gdmd (find older commit)
  - try kdevelop or sublime
  - investigate cmake/scons
  - try kdbg, nevimer

- general
  - use ansi colors
    - red for error
    - yellow for warning
    - white for other stuff
  - negative number support for symbols etc
  - merge most structs into structures.d, then pare down all imports
  - change instances of union { structs } to abstract base class with subclasses
  - provide first-class operator for (1 << n) operations
  - make it possible to write a syscall macro with variadic parameters
    - provide a local var with the number of params given
    - provide numbered vars (or better, an array) with the parameters
  - some sort of #include that just dumps a binary into that location
    - also, have a configurable version which can read data written, for
      example, as sets of hex characters in ASCII
    - this makes it far easier to import raw data into a program; otherwise, one
      must put .byte's all over the place etc.
- escape.d
  - octal escape sequences
  - hex escape sequences
- expression.d
  - modulo
- pass0.d
  - octal literals
  - hex literals
  - bin literals
  - line continuation ("\\\n")
  - go thru C operators and add them as appropriate
  - get rid of Register processing (belongs elsewhere)
- pass1.d
  - file inclusion (when the .include token is encountered, load the file, lex
    separately, then insert its tokens into the current file's array; do this
    recursively)
  - expression handling
  - allow negative values for .byte etc
  - upon symbol definition, check that no label has that name
  - and, vice versa
- pass2.d
- symbol.d
- token.d
  - get rid of Register
